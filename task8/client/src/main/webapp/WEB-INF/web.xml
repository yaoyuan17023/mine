<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0">


  <display-name>Archetype Created Web Application</display-name>

  <!--DispatcherServlet是前置控制器，-->
  <!--拦截匹配的请求，Servlet拦截匹配规则要自己定义，-->
  <!--把拦截下来的请求，依据相应的规则分发到目标Controller来处理，-->
  <!--是配置springMVC的第一步。-->
  <servlet>
    <servlet-name>springMVC</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!-- 配置springMVC需要加载的配置文件
            spring-dao.xml,spring-service.xml,spring-web.xml
            Mybatis - > spring -> springmvc
         -->
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:spring/spring-servlet.xml</param-value>
    </init-param>
    <!--如果我们在web.xml中设置了多个servlet的时候，
    可以使用load-on-startup来指定servlet的加载顺序，
    服务器会根据load-on-startup的大小依次对servlet进行初始化。-->
    <load-on-startup>1</load-on-startup>
  </servlet>

  <servlet-mapping>
    <servlet-name>springMVC</servlet-name>
    <!-- 默认匹配所有的请求 -->
    <url-pattern>/</url-pattern>
  </servlet-mapping>


</web-app>
